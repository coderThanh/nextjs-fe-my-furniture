import Layout from '@/components-root/layout'

import Gap from '@/components-root/gap'

import SEO from '@/components-root/seo'
import Footer from '@/ui/footer'
import { HomePostByCategoryDemo } from '@/ui/page-home/home-demo-category-blog'
import { HomeHotBlogDemo } from '@/ui/page-home/home-demo-hot-blog'
import { SWRConfig } from 'swr'
import Header from '../ui/header'

export default function Home({ fallback }) {
  return (
    <>
      <SEO
        pageTitle={'Trang chu'}
        description={'Generated by create next app'}
      />

      <SWRConfig value={{ fallback: fallback }}>
        <Layout className="home-page">
          <Header />
          <Gap large={30} small={20} />
          {/* <HomeHotBlog /> */}
          {/* <HomePostByCategoryAndStyle /> */}
          {!process.env.NEXT_PUBLIC_HAS_API_DB_CONECT && <HomeHotBlogDemo />}
          {!process.env.NEXT_PUBLIC_HAS_API_DB_CONECT && (
            <HomePostByCategoryDemo title="Chuyện nhà" />
          )}
          {!process.env.NEXT_PUBLIC_HAS_API_DB_CONECT && (
            <HomePostByCategoryDemo title="Xu hướng" />
          )}
          {!process.env.NEXT_PUBLIC_HAS_API_DB_CONECT && (
            <HomePostByCategoryDemo title="Minimalism" />
          )}
          {!process.env.NEXT_PUBLIC_HAS_API_DB_CONECT && (
            <HomePostByCategoryDemo title="Zen" />
          )}
          <Gap large={70} medium={50} small={30} />
          <Footer />
        </Layout>
      </SWRConfig>
    </>
  )
}

// // fetching
export async function getStaticProps() {
  //hook getStaticProps can't run swr

  // if (process.env.NEXT_PUBLIC_HAS_API_DB_CONECT) {
  //   // Get menus res
  //   const menuHeaderBottomRes = fetcherGraphSQL(
  //     GraphQLQuery.getMenuHeaderParent,
  //     {
  //       slug: process.env.NEXT_PUBLIC_MENU_HEADER_BOTTOM_SLUG,
  //     },
  //   )

  //   const menuHeaderMiddleRes = await getMenuAndchildrent(
  //     process.env.NEXT_PUBLIC_MENU_HEADER_MIDDLE_SLUG,
  //     true,
  //   )

  //   // Get page home res
  //   const pageHomeRes = await fetcherGraphSQL(GraphQLQuery.getPageHomeData, {
  //     numbers: 6,
  //   })

  //   // const menuHeaderMiddleRes = fetcher(AppApi.menuHeaderMiddle);

  //   const [menuHeaderBottomData, menuHeaderMiddleData, pageHomeData] =
  //     await Promise.all([menuHeaderBottomRes, menuHeaderMiddleRes, pageHomeRes])

  //   return {
  //     props: {
  //       fallback: {
  //         [SWRKey.headerBottom]: menuHeaderBottomData,
  //         [SWRKey.headerMiddle]: menuHeaderMiddleData,
  //         [SWRKey.pageHomeRes]: pageHomeData,
  //       },
  //     },
  //   }
  // }

  return { props: { fallback: {} } }
}
